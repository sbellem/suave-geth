// Code generated by suave/gen. DO NOT EDIT.
// Hash: a4de4954765f12ace1598fe2d9d004e3ccdae0014b678af8a068a7117a312d3e
package artifacts

import (
	"github.com/ethereum/go-ethereum/common"
)

// List of suave precompile addresses
var (
	buildEthBlockAddr                    = common.HexToAddress("0x0000000000000000000000000000000042100001")
	confidentialInputsAddr               = common.HexToAddress("0x0000000000000000000000000000000042010001")
	confidentialRetrieveAddr             = common.HexToAddress("0x0000000000000000000000000000000042020001")
	confidentialStoreAddr                = common.HexToAddress("0x0000000000000000000000000000000042020000")
	ethcallAddr                          = common.HexToAddress("0x0000000000000000000000000000000042100003")
	extractHintAddr                      = common.HexToAddress("0x0000000000000000000000000000000042100037")
	fetchBidsAddr                        = common.HexToAddress("0x0000000000000000000000000000000042030001")
	fillMevShareBundleAddr               = common.HexToAddress("0x0000000000000000000000000000000043200001")
	getAttestationVerificationReportAddr = common.HexToAddress("0x0000000000000000000000000000000043200002")
	newBidAddr                           = common.HexToAddress("0x0000000000000000000000000000000042030000")
	signEthTransactionAddr               = common.HexToAddress("0x0000000000000000000000000000000040100001")
	simulateBundleAddr                   = common.HexToAddress("0x0000000000000000000000000000000042100000")
	submitBundleJsonRPCAddr              = common.HexToAddress("0x0000000000000000000000000000000043000001")
	submitEthBlockBidToRelayAddr         = common.HexToAddress("0x0000000000000000000000000000000042100002")
)

var SuaveMethods = map[string]common.Address{
	"buildEthBlock":                    buildEthBlockAddr,
	"confidentialInputs":               confidentialInputsAddr,
	"confidentialRetrieve":             confidentialRetrieveAddr,
	"confidentialStore":                confidentialStoreAddr,
	"ethcall":                          ethcallAddr,
	"extractHint":                      extractHintAddr,
	"fetchBids":                        fetchBidsAddr,
	"fillMevShareBundle":               fillMevShareBundleAddr,
	"getAttestationVerificationReport": getAttestationVerificationReportAddr,
	"newBid":                           newBidAddr,
	"signEthTransaction":               signEthTransactionAddr,
	"simulateBundle":                   simulateBundleAddr,
	"submitBundleJsonRPC":              submitBundleJsonRPCAddr,
	"submitEthBlockBidToRelay":         submitEthBlockBidToRelayAddr,
}

func PrecompileAddressToName(addr common.Address) string {
	switch addr {
	case buildEthBlockAddr:
		return "buildEthBlock"
	case confidentialInputsAddr:
		return "confidentialInputs"
	case confidentialRetrieveAddr:
		return "confidentialRetrieve"
	case confidentialStoreAddr:
		return "confidentialStore"
	case ethcallAddr:
		return "ethcall"
	case extractHintAddr:
		return "extractHint"
	case fetchBidsAddr:
		return "fetchBids"
	case fillMevShareBundleAddr:
		return "fillMevShareBundle"
	case getAttestationVerificationReportAddr:
		return "getAttestationVerificationReport"
	case newBidAddr:
		return "newBid"
	case signEthTransactionAddr:
		return "signEthTransaction"
	case simulateBundleAddr:
		return "simulateBundle"
	case submitBundleJsonRPCAddr:
		return "submitBundleJsonRPC"
	case submitEthBlockBidToRelayAddr:
		return "submitEthBlockBidToRelay"
	}
	return ""
}
